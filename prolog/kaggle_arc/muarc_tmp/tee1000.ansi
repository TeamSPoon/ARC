[32m% 29,125 inferences, 0.021 CPU in 0.087 seconds (24% CPU, 1395477 Lips)
[0m[32m% 98,809 inferences, 0.018 CPU in 0.018 seconds (100% CPU, 5513095 Lips)
[0m%~ start(gen_gids)
creating(current_suite_testnames(evaluation))
[32m% 4,365 inferences, 0.001 CPU in 0.001 seconds (100% CPU, 4839246 Lips)
[0m%~ end(gen_gids)
0=[46m[0m[mblack[0m[0m[0m[[0m[0m[1;4m.[0m[0m[0m] 1=[0m[0m[34mblue[0m[0m[0m[[0m[0m[1;4mÂ©[0m[0m[0m] 2=[0m[0m[31mred[0m[0m[0m[[0m[0m[1;4mÂ®[0m[0m[0m] 3=[0m[0m[32mgreen[0m[0m[0m[[0m[0m[1;4mG[0m[0m[0m] 4=[0m[0m[33myellow[0m[0m[0m[[0m[0m[1;4mY[0m[0m[0m] 5=[0m[0m[38;2;154;154;154msilver[0m[0m[0m[[0m[0m[1;4ms[0m[0m[0m] 6=[0m[0m[35mpurple[0m[0m[0m[[0m[0m[1;4mv[0m[0m[0m] 7=[0m[0m[38;2;255;140;0morange[0m[0m[0m[[0m[0m[1;4mo[0m[0m[0m] 8=[0m[0m[36mcyan[0m[0m[0m[[0m[0m[1;4mC[0m[0m[0m] 9=[0m[0m[38;2;139;69;19mbrown[0m[0m[0m[[0m[0m[1;4mB[0m[0m[0m] fg=[0m[0m[38;2;244;124;124mfg[0m[0m[0m[[0m[0m[1;4mq[0m[0m[0m] wfg=[0m[0m[38;2;255;255;255mwfg[0m[0m[0m[[0m[0m[1;4m,[0m[0m[0m] bg= [[0m[0m[1;4m.[0m[0m[0m] wbg=[0m[0m[38;2;58;90;58mwbg[0m[0m[0m[[0m[0m[1;4mf[0m[0m[0m] black=[0m[0m[38;2;48;16;48mblack[0m[0m[0m[[0m[0m[1;4m.[0m[0m[0m] #101010=[0m[0m[38;2;16;16;16m#101010[0m[0m[0m[[0m[0m[1;4m#101010[0m[0m[0m] #100010=[0m[0m[38;2;16;0;16m#100010[0m[0m[0m[[0m[0m[1;4m#100010[0m[0m[0m] #104010=[0m[0m[38;2;16;64;16m#104010[0m[0m[0m[[0m[0m[1;4m#104010[0m[0m[0m] 
   _____________________________________
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[38;2;255;140;0mo[0m[0m[0m [0m[0m[36mC[0m[0m[0m [0m[0m[38;2;139;69;19mB[0m[0m[0m [0m[0m[38;2;244;124;124mq[0m[0m[0m [0m[0m[38;2;255;255;255m,[0m[0m[0m     [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;16;16;16m#101010[0m[0m[0m [0m[0m[38;2;16;0;16m#100010[0m[0m[0m   |
  |   [0m[0m[38;2;16;0;16m#100010[0m[0m[0m [0m[0m[38;2;16;16;16m#101010[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m     [0m[0m[38;2;255;255;255m,[0m[0m[0m [0m[0m[38;2;244;124;124mq[0m[0m[0m [0m[0m[38;2;139;69;19mB[0m[0m[0m [0m[0m[36mC[0m[0m[0m [0m[0m[38;2;255;140;0mo[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[38;2;255;140;0mo[0m[0m[0m [0m[0m[36mC[0m[0m[0m [0m[0m[38;2;139;69;19mB[0m[0m[0m [0m[0m[38;2;244;124;124mq[0m[0m[0m [0m[0m[38;2;255;255;255m,[0m[0m[0m     [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;16;16;16m#101010[0m[0m[0m [0m[0m[38;2;16;0;16m#100010[0m[0m[0m   |
   Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯

[0m[1m[97m[40m% Type ?- demo. % or press up arrow[49m[0m[21m[0m
% init_why(before_boot,after('/opt/logicmoo_workspace/packs_sys/logicmoo_agi/prolog/kaggle_arc/kaggle_arc.pl')).
80 ?- [7Gdemo.[7Gbfly_startup.
P;HTML|<style>
.collapsible {
  background-color: #777;
  color: white;
  cursor: pointer;
  padding: 18px;
  width: 100%;
  border: none;
  text-align: left;
  outline: none;
  font-size: 15px;
}

.active, .collapsible:hover {
  background-color: #555;
}

.collapsible:after {
  content: '\002B';
  color: white;
  font-weight: bold;
  float: right;
  margin-left: 5px;
}

.active:after {
  content: "\2212";
}

.collapsed-c {
  padding: 0 18px;
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.2s ease-out;
  background-color: #f1f1f1;
}

</style>

P;HTML|
%=% ?- test_pp_each(\+ (sample_pp_term(_264),\+ (nl,print_tree(_264),nl))).
%====================================================
% ?- test_pp(ansi,on_xf_ignore(test_print_tree(1))). 
% ?- test_pp(ansi,on_xf_ignore(test_print_tree(1))). 
% ?- test_pp(ansi,on_xf_ignore(test_print_tree(1)))
     . 
% ?- test_pp(ansi,on_xf_ignore(test_print_tree(1))). 
%==================START====================
==>
e2c_lexical_segs = [ w(is,[pos(aux),loc(1),lnks(1),txt("is"),link(1,'S',r('S',seg(1,10)))]), 
                     w( there, [
                       pos(ex), loc(2),lnks(2),txt("there"), 
                       link(1,'NP',r('NP',seg(2,2))),link(2,'S',r('S',seg(1,10)))]), 
                     w( a, [
                       pos(dt), loc(3),lnks(3),txt("a"), 
                       link(1,'NP',r('NP',seg(3,4))), link(2,'NP',r('NP',seg(3,9))),link(3,'S',r('S',seg(1,10)))]), 
                     w( the, [
                       pos(dt), loc(7),lnks(6),txt("the"), 
                       link(1,'NP',r('NP',seg(7,9))), link(2,'VP',r('VP',seg(6,9))),link(3,'S',r('S',seg(6,9))), 
                       link(4,'SBAR',r('SBAR',seg(5,9))), link(5,'NP',r('NP',seg(3,9))),link(6,'S',r('S',seg(1,10)))]), 
                     w( greatest, [
                       pos(jjs), loc(8),lnks(6),txt("greatest"), 
                       link(1,'NP',r('NP',seg(7,9))), link(2,'VP',r('VP',seg(6,9))),link(3,'S',r('S',seg(6,9))), 
                       link(4,'SBAR',r('SBAR',seg(5,9))), link(5,'NP',r('NP',seg(3,9))),link(6,'S',r('S',seg(1,10)))]), 
                     span( [ seg(6,9), phrase('VP'),size(4),lnks(4), 
                             #(r('VP',seg(6,9))), 
                             txt(["becomes","the","greatest","tenor"]), 
                             childs(1), child(1,'NP',r('NP',seg(7,9))),link(1,'S',r('S',seg(6,9))), 
                             link(2,'SBAR',r('SBAR',seg(5,9))), link(3,'NP',r('NP',seg(3,9))),link(4,'S',r('S',seg(1,10)))]), 
                     span( [ seg(1,10), phrase('S'),size(10),lnks(0), 
                             #(r('S',seg(1,10))), 
                             txt( [ "is", "there","a","man","who", 
                                    "becomes","the","greatest","tenor","?"]), childs(2),child(1,'NP',r('NP',seg(2,2))), 
                             child(2,'NP',r('NP',seg(3,9)))])]<==
%==================END========================
;HTML|%====================================================
% ?- test_pp(http,on_xf_ignore(test_print_tree(1))). 
% ?- test_pp(http,on_xf_ignore(test_print_tree(1))). 
% ?- test_pp(http,on_xf_ignore(test_print_tree(1))). 
% ?- test_pp(http,on_xf_ignore(test_print_tree(1))). 
%==================START====================
==>
e2c_lexical_segs = <span class="pl-functor">[ </span>/*is.aux.is.S.there.ex.there.NP.*/ <p/>
                     w(is,[pos(aux),loc(1),lnks(1),txt("is"),link(1,'S',r('S',seg(1,10)))]),  <p/>
                     w( there, [/*ex.there.NP.S.2.1.10.[].pos.lo*/ <p/>
                       pos(ex), loc(2),lnks(2),txt("there"), 
                       link(1,'NP',r('NP',seg(2,2))),link(2,'S',r('S',seg(1,10)))]),  <p/>
                     w( a, [/*dt.a.NP.S.3.1.4.2.9.10.[].pos.*/ <p/>
                       pos(dt), loc(3),lnks(3),txt("a"), 
                       link(1,'NP',r('NP',seg(3,4))), link(2,'NP',r('NP',seg(3,9))),link(3,'S',r('S',seg(1,10)))]),  <p/>
                     w( the, [/*dt.the.NP.VP.S.SBAR.7.6.1.9.2.*/ <p/>
                       pos(dt), loc(7),lnks(6),txt("the"), 
                       link(1,'NP',r('NP',seg(7,9))), link(2,'VP',r('VP',seg(6,9))),link(3,'S',r('S',seg(6,9))), 
                       link(4,'SBAR',r('SBAR',seg(5,9))), link(5,'NP',r('NP',seg(3,9))),link(6,'S',r('S',seg(1,10)))]),  <p/>
                     w( greatest, [/*jjs.greatest.NP.VP.S.SBAR.8.6.*/ <p/>
                       pos(jjs), loc(8),lnks(6),txt("greatest"), 
                       link(1,'NP',r('NP',seg(7,9))), link(2,'VP',r('VP',seg(6,9))),link(3,'S',r('S',seg(6,9))), 
                       link(4,'SBAR',r('SBAR',seg(5,9))), link(5,'NP',r('NP',seg(3,9))),link(6,'S',r('S',seg(1,10)))]),  <p/>
                     span( [ /*VP.becomes.the.greatest.tenor.*/ <p/>
                             seg(6,9), phrase('VP'),size(4),lnks(4), 
                             #(r('VP',seg(6,9))),  <p/>
                             txt(["becomes","the","greatest","tenor"]),  <p/>
                             childs(1), child(1,'NP',r('NP',seg(7,9))),link(1,'S',r('S',seg(6,9))), 
                             link(2,'SBAR',r('SBAR',seg(5,9))), link(3,'NP',r('NP',seg(3,9))),link(4,'S',r('S',seg(1,10)))]),  <p/>
                     span( [ /*S.is.there.a.man.who.becomes.t*/ <p/>
                             seg(1,10), phrase('S'),size(10),lnks(0), 
                             #(r('S',seg(1,10))),  <p/>
                             txt( [ /*is.there.a.man.who.becomes.the*/ <p/>
                                    "is", "there","a","man","who", 
                                    "becomes","the","greatest","tenor","?"]), childs(2),child(1,'NP',r('NP',seg(2,2))), 
                             child(2,'NP',r('NP',seg(3,9)))])]<==
%==================END========================
;HTML|%====================================================
% ?- test_pp(bfly,on_xf_ignore(test_print_tree(1))). 
% ?- <span class="pl-compound pl-level-0"><span class="pl-functor">test_pp</span>(<span class="pl-args"><span class="pl-atom">bfly</span>, <span class="pl-compound"><span class="pl-functor">on_xf_ignore</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">test_print_tree</span>(<span class="pl-args"><span class="pl-int">1</span></span>)</span></span>)</span></span>)</span>. 
% ?- test_pp(bfly,on_xf_ignore(test_print_tree(1))). 
% ?- <span class="pl-compound pl-level-0"><span class="pl-functor">test_pp</span>(<span class="pl-args"><span class="pl-atom">bfly</span>, <span class="pl-compound"><span class="pl-functor">on_xf_ignore</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">test_print_tree</span>(<span class="pl-args"><span class="pl-int">1</span></span>)</span></span>)</span></span>)</span>. 
%==================START====================
==>
e2c_lexical_segs = <span class="pl-functor">[ </span>/*is.aux.is.S.there.ex.there.NP.*/ <p/>
                     w(is,[pos(aux),loc(1),lnks(1),txt("is"),link(1,'S',r('S',seg(1,10)))]),  <p/>
                     w( there, [/*ex.there.NP.S.2.1.10.[].pos.lo*/ <p/>
                       pos(ex), loc(2),lnks(2),txt("there"), 
                       link(1,'NP',r('NP',seg(2,2))),link(2,'S',r('S',seg(1,10)))]),  <p/>
                     w( a, [/*dt.a.NP.S.3.1.4.2.9.10.[].pos.*/ <p/>
                       pos(dt), loc(3),lnks(3),txt("a"), 
                       link(1,'NP',r('NP',seg(3,4))), link(2,'NP',r('NP',seg(3,9))),link(3,'S',r('S',seg(1,10)))]),  <p/>
                     w( the, [/*dt.the.NP.VP.S.SBAR.7.6.1.9.2.*/ <p/>
                       pos(dt), loc(7),lnks(6),txt("the"), 
                       link(1,'NP',r('NP',seg(7,9))), link(2,'VP',r('VP',seg(6,9))),link(3,'S',r('S',seg(6,9))), 
                       link(4,'SBAR',r('SBAR',seg(5,9))), link(5,'NP',r('NP',seg(3,9))),link(6,'S',r('S',seg(1,10)))]),  <p/>
                     w( greatest, [/*jjs.greatest.NP.VP.S.SBAR.8.6.*/ <p/>
                       pos(jjs), loc(8),lnks(6),txt("greatest"), 
                       link(1,'NP',r('NP',seg(7,9))), link(2,'VP',r('VP',seg(6,9))),link(3,'S',r('S',seg(6,9))), 
                       link(4,'SBAR',r('SBAR',seg(5,9))), link(5,'NP',r('NP',seg(3,9))),link(6,'S',r('S',seg(1,10)))]),  <p/>
                     span( [ /*VP.becomes.the.greatest.tenor.*/ <p/>
                             seg(6,9), phrase('VP'),size(4),lnks(4), 
                             #(r('VP',seg(6,9))),  <p/>
                             txt(["becomes","the","greatest","tenor"]),  <p/>
                             childs(1), child(1,'NP',r('NP',seg(7,9))),link(1,'S',r('S',seg(6,9))), 
                             link(2,'SBAR',r('SBAR',seg(5,9))), link(3,'NP',r('NP',seg(3,9))),link(4,'S',r('S',seg(1,10)))]),  <p/>
                     span( [ /*S.is.there.a.man.who.becomes.t*/ <p/>
                             seg(1,10), phrase('S'),size(10),lnks(0), 
                             #(r('S',seg(1,10))),  <p/>
                             txt( [ /*is.there.a.man.who.becomes.the*/ <p/>
                                    "is", "there","a","man","who", 
                                    "becomes","the","greatest","tenor","?"]), childs(2),child(1,'NP',r('NP',seg(2,2))), 
                             child(2,'NP',r('NP',seg(3,9)))])]<==
%==================END========================
%=% ?- test_pp_each(\+ (sample_pp_term(_2228),\+ (nl,print_tree(_2228),nl))).
%====================================================
% ?- test_pp(ansi,on_xf_ignore(test_print_tree(2))). 
% ?- test_pp(ansi,on_xf_ignore(test_print_tree(2))). 
% ?- test_pp(ansi,on_xf_ignore(test_print_tree(2)))
     . 
% ?- test_pp(ansi,on_xf_ignore(test_print_tree(2))). 
%==================START====================
==>
a( b( c(e(7),f), 
     print_tree(a(b(c(e(7),f),d))), 
     print_tree(a(b(c,E=1,(e(E),f),d))), 
     [ print_tree, a,_31362,SEE,x,e, 
       1.3,-7, 
       `abcd`, 
       "abcd", 
       [a,b,c], f,d,print_tree,a,b,c,e, 
       7,f,d], 
     print_tree(a(b(c(e(7),f),d)),a)), x,y).<==
%==================END========================
;HTML|%====================================================
% ?- test_pp(http,on_xf_ignore(test_print_tree(2))). 
% ?- test_pp(http,on_xf_ignore(test_print_tree(2))). 
% ?- test_pp(http,on_xf_ignore(test_print_tree(2))). 
% ?- test_pp(http,on_xf_ignore(test_print_tree(2))). 
%==================START====================
==>
a<span class="pl-functor">( </span>/*f.d.c.print_tree.a.SEE.x.e.abc*/ <p/>
   b( c(e(7),f), /*f.d.c.E.print_tree.a.SEE.x.e.a*/ <p/>
     print_tree(a(b(c(e(7),f),d))),  <p/>
     print_tree(a(b(c,E=1,(e(E),f),d))),  <p/>
     [ /*print_tree.a.SEE.x.e.abcd.b.c.*/ <p/>
       print_tree, a,_81630,SEE,x,e, 
       1.3,-7, 
       `abcd`,  <p/>
       "abcd",  <p/>
       [a,b,c], f,d,print_tree,a,b,c,e, 
       7,f,d],  <p/>
     print_tree(a(b(c(e(7),f),d)),a)), x,y).<==
%==================END========================
;HTML|%====================================================
% ?- test_pp(bfly,on_xf_ignore(test_print_tree(2))). 
% ?- <span class="pl-compound pl-level-0"><span class="pl-functor">test_pp</span>(<span class="pl-args"><span class="pl-atom">bfly</span>, <span class="pl-compound"><span class="pl-functor">on_xf_ignore</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">test_print_tree</span>(<span class="pl-args"><span class="pl-int">2</span></span>)</span></span>)</span></span>)</span>. 
% ?- test_pp(bfly,on_xf_ignore(test_print_tree(2))). 
% ?- <span class="pl-compound pl-level-0"><span class="pl-functor">test_pp</span>(<span class="pl-args"><span class="pl-atom">bfly</span>, <span class="pl-compound"><span class="pl-functor">on_xf_ignore</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">test_print_tree</span>(<span class="pl-args"><span class="pl-int">2</span></span>)</span></span>)</span></span>)</span>. 
%==================START====================
==>
a<span class="pl-functor">( </span>/*f.d.c.print_tree.a.SEE.x.e.abc*/
   b( <span class="pl-compound pl-level-0"><span class="pl-functor">c</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">e</span>(<span class="pl-args"><span class="pl-int">7</span></span>)</span>, <span class="pl-atom">f</span></span>)</span>, /*f.d.c.E.print_tree.a.SEE.x.e.a*/
     <span class="pl-compound pl-level-0"><span class="pl-functor">print_tree</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">a</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">b</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">c</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">e</span>(<span class="pl-args"><span class="pl-int">7</span></span>)</span>, <span class="pl-atom">f</span></span>)</span>, <span class="pl-atom">d</span></span>)</span></span>)</span></span>)</span>, 
     <span class="pl-compound pl-level-0"><span class="pl-functor">print_tree</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">a</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">b</span>(<span class="pl-args"><span class="pl-atom">c</span>, <span class="pl-compound"><span class="pl-var">E</span><span class="pl-infix">=</span><span class="pl-int">1</span></span>, (<span class="pl-compound"><span class="pl-compound"><span class="pl-functor">e</span>(<span class="pl-args"><span class="pl-var">E</span></span>)</span><span class="pl-infix">,</span><span class="pl-atom">f</span></span>), <span class="pl-atom">d</span></span>)</span></span>)</span></span>)</span>, 
     [ /*print_tree.a.SEE.x.e.abcd.b.c.*/
       print_tree, a, <span class="pl-avar">_74268</span>, <span class="pl-var">SEE</span>, x, e, 
       <span class="pl-float">1.3</span>, <span class="pl-int">-7</span>, 
       `abcd`, 
       "abcd", 
       <span class="pl-list"><span class="pl-functor"> [ </span><span class="pl-args"><span class="pl-atom">a</span>, <span class="pl-atom">b</span>|<span class="pl-ellipsis">...</span></span>]</span>, f, d, print_tree, a, b, c, e, 
       <span class="pl-int">7</span>, f, d], 
     <span class="pl-compound pl-level-0"><span class="pl-functor">print_tree</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">a</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">b</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">c</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">e</span>(<span class="pl-args"><span class="pl-int">7</span></span>)</span>, <span class="pl-atom">f</span></span>)</span>, <span class="pl-atom">d</span></span>)</span></span>)</span>, <span class="pl-atom">a</span></span>)</span>), x, y).<==
%==================END========================
%=% ?- test_pp_each(\+ (sample_pp_term(_2338),\+ (nl,print_tree(_2338),nl))).
%====================================================
% ?- test_pp(ansi,on_xf_ignore(test_print_tree(3))). 
% ?- test_pp(ansi,on_xf_ignore(test_print_tree(3))). 
% ?- test_pp(ansi,on_xf_ignore(test_print_tree(3)))
     . 
% ?- test_pp(ansi,on_xf_ignore(test_print_tree(3))). 
%==================START====================
==>
print_tree_with_final(a(b(c(e(E))))) :- 
  print_tree_with_final( 
       '..map.'(C'dict'(atom,int,atom,int,atom)), 
     a( b( c(e(E),f), 
          print_tree(a(b(c(e(7),f),d))), 
          print_tree(a(b(c,E1=1,(e(E1),f),d))), 
          [ print_tree, a,_33904,SEE,x,e, 
            1.3,-7, 
            `abcd`, 
            "abcd", 
            [a,b,c], f,d,print_tree,a,b,c,e, 
            7,f,d], 
          print_tree(a(b(c(e(7),f),d)))), x,y), 
     '.') , 
  !<==
%==================END========================
;HTML|%====================================================
% ?- test_pp(http,on_xf_ignore(test_print_tree(3))). 
% ?- test_pp(http,on_xf_ignore(test_print_tree(3))). 
% ?- test_pp(http,on_xf_ignore(test_print_tree(3))). 
% ?- test_pp(http,on_xf_ignore(test_print_tree(3))). 
%==================START====================
==>
print_tree_with_final(a(b(c(e(E)))))<span class="pl-functor"> :- </span><span class="pl-ellipsis clickprev fold">/*point.x.y.E.f.d.c.E1.print_tre*/</span><span class="pl-args"> <p/>
  print_tree_with_final( /*point.x.y.E.f.d.c.E1.print_tre*/ <p/>
     point{ /*.x.y.1.2.[].:....*/ <p/>
       x : 1,  <p/>
       y : 2},  <p/>
     a( /*E.f.d.c.E1.print_tree.a.SEE.x.*/ <p/>
        b( c(e(E),f), /*f.d.c.E1.print_tree.a.SEE.x.e.*/ <p/>
          print_tree(a(b(c(e(7),f),d))),  <p/>
          print_tree(a(b(c,E1=1,(e(E1),f),d))),  <p/>
          [ /*print_tree.a.SEE.x.e.abcd.b.c.*/ <p/>
            print_tree, a,_4046,SEE,x,e, 
            1.3,-7, 
            `abcd`,  <p/>
            "abcd",  <p/>
            [a,b,c], f,d,print_tree,a,b,c,e, 
            7,f,d],  <p/>
          print_tree(a(b(c(e(7),f),d)))), x,y),  <p/>
     '.') ,  <p/>
  !</span><==
%==================END========================
;HTML|%====================================================
% ?- test_pp(bfly,on_xf_ignore(test_print_tree(3))). 
% ?- <span class="pl-compound pl-level-0"><span class="pl-functor">test_pp</span>(<span class="pl-args"><span class="pl-atom">bfly</span>, <span class="pl-compound"><span class="pl-functor">on_xf_ignore</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">test_print_tree</span>(<span class="pl-args"><span class="pl-int">3</span></span>)</span></span>)</span></span>)</span>. 
% ?- test_pp(bfly,on_xf_ignore(test_print_tree(3))). 
% ?- <span class="pl-compound pl-level-0"><span class="pl-functor">test_pp</span>(<span class="pl-args"><span class="pl-atom">bfly</span>, <span class="pl-compound"><span class="pl-functor">on_xf_ignore</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">test_print_tree</span>(<span class="pl-args"><span class="pl-int">3</span></span>)</span></span>)</span></span>)</span>. 
%==================START====================
==>
print_tree_with_final(a(b(c(e(E)))))<span class="pl-functor"> :- </span><span class="pl-ellipsis clickprev fold">/*point.x.y.E.f.d.c.E1.print_tre*/</span><span class="pl-args"> <p/>
  print_tree_with_final( /*point.x.y.E.f.d.c.E1.print_tre*/ <p/>
     point{ /*.x.y.1.2.[].:....*/ <p/>
       x : 1,  <p/>
       y : 2},  <p/>
     a( /*E.f.d.c.E1.print_tree.a.SEE.x.*/ <p/>
        b( c(e(E),f), /*f.d.c.E1.print_tree.a.SEE.x.e.*/ <p/>
          print_tree(a(b(c(e(7),f),d))),  <p/>
          print_tree(a(b(c,E1=1,(e(E1),f),d))),  <p/>
          [ /*print_tree.a.SEE.x.e.abcd.b.c.*/ <p/>
            print_tree, a,_4012,SEE,x,e, 
            1.3,-7, 
            `abcd`,  <p/>
            "abcd",  <p/>
            [a,b,c], f,d,print_tree,a,b,c,e, 
            7,f,d],  <p/>
          print_tree(a(b(c(e(7),f),d)))), x,y),  <p/>
     '.') ,  <p/>
  !</span><==
%==================END========================
%=% ?- test_pp_each(\+ (sample_pp_term(_1866),\+ (nl,print_tree(_1866),nl))).
%====================================================
% ?- test_pp(ansi,on_xf_ignore(test_print_tree(4))). 
% ?- test_pp(ansi,on_xf_ignore(test_print_tree(4))). 
% ?- test_pp(ansi,on_xf_ignore(test_print_tree(4)))
     . 
% ?- test_pp(ansi,on_xf_ignore(test_print_tree(4))). 
%==================START====================
==>

asserted( exists( Exists7, 
            exists( TimeFn_Past_ActWalking, 
              exists( Exists6, 
                exists( Exists, 
                  &( &( &( &( &( &( &( &( &( &( &( &( info( 'XVAR_NP_John_1_1', [
                                                        loc(1), pos('NP'),equals('XVAR_NP_John_1_1'),seg(1,1), 
                                                        phrase('NP'),size(1),lnks(2), 
                                                        #(r('NP',seg(1,1))),txt(["john"]),childs(0), 
                                                        link(1,'S',r('S',seg(1,5))), 
                                                        link(2,'CORENLP',r('CORENLP',seg(1,5)))]), 
                                                      info( 'XVAR_NP_The_Fountain_4_5', [
                                                        loc(4), 
                                                        pos('NP'), equals('XVAR_NP_The_Fountain_4_5'),seg(4,5), 
                                                        phrase('NP'),size(2),lnks(4), 
                                                        #(r('NP',seg(4,5))), txt(["the","fountain"]),childs(0), 
                                                        link(1,'PP',r('PP',seg(3,5))), link(2,'VP',r('VP',seg(2,5))),link(3,'S',r('S',seg(1,5))), 
                                                        link(4,'CORENLP',r('CORENLP',seg(1,5)))])), 
                                                   span( [ seg(1,5), phrase('S'),size(5),lnks(1),#(r('S',seg(1,5))), 
                                                           txt(["john","walked","to","the","fountain"]), childs(2),child(1,'NP',r('NP',seg(1,1))), 
                                                           child(2,'VP',r('VP',seg(2,5))), 
                                                           link(1,'CORENLP',r('CORENLP',seg(1,5)))])), 
                                                span( [ seg(1,5), phrase('CORENLP'),size(5),lnks(0), 
                                                        #(r('CORENLP',seg(1,5))), 
                                                        txt(["john","walked","to","the","fountain"]), childs(1),child(1,'S',r('S',seg(1,5)))])), 
                                             span( [ seg(2,5), phrase('VP'),size(4),lnks(2), 
                                                     #(r('VP',seg(2,5))), 
                                                     txt(["walked","to","the","fountain"]), 
                                                     childs(1), child(1,'PP',r('PP',seg(3,5))),link(1,'S',r('S',seg(1,5))), 
                                                     link(2,'CORENLP',r('CORENLP',seg(1,5)))])), 
                                          span( [ seg(3,5), phrase('PP'),size(3),lnks(3), 
                                                  #(r('PP',seg(3,5))), txt(["to","the","fountain"]),childs(1), 
                                                  child(1,'NP',r('NP',seg(4,5))), link(1,'VP',r('VP',seg(2,5))),link(2,'S',r('S',seg(1,5))), 
                                                  link(3,'CORENLP',r('CORENLP',seg(1,5)))])), 
                                       p(c(walk,to),C,P)), 
                                    iza(TimeFn_Past_ActWalking,actWalking)), 
                                 doer(TimeFn_Past_ActWalking,Doer)), 
                              objectWalked(TimeFn_Past_ActWalking,ObjectWalked)), 
                           iza(TimeFn_Past_ActWalking,timeFn(vPast))), 
                        equalsVar(XVAR_NP_The_Fountain_4_5,'XVAR_NP_The_Fountain_4_5')), 
                     equalsVar(XVAR_NP_John_1_1,'XVAR_NP_John_1_1')))))))

e2c_lexical_segs = [ w(is,[pos(aux),loc(1),lnks(1),txt("is"),link(1,'S',r('S',seg(1,10)))]), 
                     w( there, [
                       pos(ex), loc(2),lnks(2),txt("there"), 
                       link(1,'NP',r('NP',seg(2,2))),link(2,'S',r('S',seg(1,10)))]), 
                     w( a, [
                       pos(dt), loc(3),lnks(3),txt("a"), 
                       link(1,'NP',r('NP',seg(3,4))), link(2,'NP',r('NP',seg(3,9))),link(3,'S',r('S',seg(1,10)))]), 
                     w( the, [
                       pos(dt), loc(7),lnks(6),txt("the"), 
                       link(1,'NP',r('NP',seg(7,9))), link(2,'VP',r('VP',seg(6,9))),link(3,'S',r('S',seg(6,9))), 
                       link(4,'SBAR',r('SBAR',seg(5,9))), link(5,'NP',r('NP',seg(3,9))),link(6,'S',r('S',seg(1,10)))]), 
                     w( greatest, [
                       pos(jjs), loc(8),lnks(6),txt("greatest"), 
                       link(1,'NP',r('NP',seg(7,9))), link(2,'VP',r('VP',seg(6,9))),link(3,'S',r('S',seg(6,9))), 
                       link(4,'SBAR',r('SBAR',seg(5,9))), link(5,'NP',r('NP',seg(3,9))),link(6,'S',r('S',seg(1,10)))]), 
                     span( [ seg(6,9), phrase('VP'),size(4),lnks(4), 
                             #(r('VP',seg(6,9))), 
                             txt(["becomes","the","greatest","tenor"]), 
                             childs(1), child(1,'NP',r('NP',seg(7,9))),link(1,'S',r('S',seg(6,9))), 
                             link(2,'SBAR',r('SBAR',seg(5,9))), link(3,'NP',r('NP',seg(3,9))),link(4,'S',r('S',seg(1,10)))]), 
                     span( [ seg(1,10), phrase('S'),size(10),lnks(0), 
                             #(r('S',seg(1,10))), 
                             txt( [ "is", "there","a","man","who", 
                                    "becomes","the","greatest","tenor","?"]), childs(2),child(1,'NP',r('NP',seg(2,2))), 
                             child(2,'NP',r('NP',seg(3,9)))])]

a( b( c(e(7),f), 
     print_tree(a(b(c(e(7),f),d))), 
     print_tree(a(b(c,E=1,(e(E),f),d))), 
     [ print_tree, a,_37286,SEE,x,e, 
       1.3,-7, 
       `abcd`, 
       "abcd", 
       [a,b,c], f,d,print_tree,a,b,c,e, 
       7,f,d], 
     print_tree(a(b(c(e(7),f),d)))), x,y)

print_tree_with_final(a(b(c(e(E))))) :- 
  print_tree_with_final( 
     a( b( c(e(_156934,(VAR_Sqrt:=Sqrt:-Sqrt is sqrt(_156962**2+_156968**2))),f), 
          print_tree(a(b(c(e(7),f),d))), 
          print_tree(a(b(c,E=1,(e(E),f),d))), 
          [ print_tree, a,_130116,SEE,x,e, 
            1.3,-7, 
            `abcd`, 
            "abcd", 
            [a,b,c], f,d,print_tree,a,b,c,e, 
            7,f,d], 
          print_tree(a(b(c(e(7),f),d)))), x,y), 
     '.') , 
  !

  '..map.'(C'dict'(atom,int,atom,int,atom))
<==
%==================END========================
;HTML|%====================================================
% ?- test_pp(http,on_xf_ignore(test_print_tree(4))). 
% ?- test_pp(http,on_xf_ignore(test_print_tree(4))). 
% ?- test_pp(http,on_xf_ignore(test_print_tree(4))). 
% ?- test_pp(http,on_xf_ignore(test_print_tree(4))). 
%==================START====================
==>

asserted( exists( Exists7,  <p/>
            exists( TimeFn_Past_ActWalking,  <p/>
              exists( Exists6,  <p/>
                exists<span class="pl-functor">( Exists, </span>/*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                  &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                     &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                        &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                           &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                              &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                                 &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                                    &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                                       &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                                          &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                                             &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                                                &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                                                   &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                                                      info( 'XVAR_NP_John_1_1', [/*NP.XVAR_NP_John_1_1.john.S.COR*/ <p/>
                                                        loc(1), pos('NP'),equals('XVAR_NP_John_1_1'),seg(1,1), 
                                                        phrase('NP'),size(1),lnks(2), 
                                                        #(r('NP',seg(1,1))),txt(["john"]),childs(0), 
                                                        link(1,'S',r('S',seg(1,5))),  <p/>
                                                        link(2,'CORENLP',r('CORENLP',seg(1,5)))]),  <p/>
                                                      info( 'XVAR_NP_The_Fountain_4_5', [/*NP.XVAR_NP_The_Fountain_4_5.th*/ <p/>
                                                        loc(4),  <p/>
                                                        pos('NP'), equals('XVAR_NP_The_Fountain_4_5'),seg(4,5), 
                                                        phrase('NP'),size(2),lnks(4), 
                                                        #(r('NP',seg(4,5))), txt(["the","fountain"]),childs(0), 
                                                        link(1,'PP',r('PP',seg(3,5))), link(2,'VP',r('VP',seg(2,5))),link(3,'S',r('S',seg(1,5))), 
                                                        link(4,'CORENLP',r('CORENLP',seg(1,5)))])),  <p/>
                                                   span( [ /*S.john.walked.to.the.fountain.*/ <p/>
                                                           seg(1,5), phrase('S'),size(5),lnks(1),#(r('S',seg(1,5))), 
                                                           txt(["john","walked","to","the","fountain"]), childs(2),child(1,'NP',r('NP',seg(1,1))), 
                                                           child(2,'VP',r('VP',seg(2,5))),  <p/>
                                                           link(1,'CORENLP',r('CORENLP',seg(1,5)))])),  <p/>
                                                span( [ /*CORENLP.john.walked.to.the.fou*/ <p/>
                                                        seg(1,5), phrase('CORENLP'),size(5),lnks(0), 
                                                        #(r('CORENLP',seg(1,5))),  <p/>
                                                        txt(["john","walked","to","the","fountain"]), childs(1),child(1,'S',r('S',seg(1,5)))])),  <p/>
                                             span( [ /*VP.walked.to.the.fountain.PP.S*/ <p/>
                                                     seg(2,5), phrase('VP'),size(4),lnks(2), 
                                                     #(r('VP',seg(2,5))),  <p/>
                                                     txt(["walked","to","the","fountain"]),  <p/>
                                                     childs(1), child(1,'PP',r('PP',seg(3,5))),link(1,'S',r('S',seg(1,5))), 
                                                     link(2,'CORENLP',r('CORENLP',seg(1,5)))])),  <p/>
                                          span( [ /*PP.to.the.fountain.NP.VP.S.COR*/ <p/>
                                                  seg(3,5), phrase('PP'),size(3),lnks(3), 
                                                  #(r('PP',seg(3,5))), txt(["to","the","fountain"]),childs(1), 
                                                  child(1,'NP',r('NP',seg(4,5))), link(1,'VP',r('VP',seg(2,5))),link(2,'S',r('S',seg(1,5))), 
                                                  link(3,'CORENLP',r('CORENLP',seg(1,5)))])),  <p/>
                                       p(c(walk,to),C,P)),  <p/>
                                    iza(TimeFn_Past_ActWalking,actWalking)),  <p/>
                                 doer(TimeFn_Past_ActWalking,Doer)),  <p/>
                              objectWalked(TimeFn_Past_ActWalking,ObjectWalked)),  <p/>
                           iza(TimeFn_Past_ActWalking,timeFn(vPast))),  <p/>
                        equalsVar(XVAR_NP_The_Fountain_4_5,'XVAR_NP_The_Fountain_4_5')),  <p/>
                     equalsVar(XVAR_NP_John_1_1,'XVAR_NP_John_1_1')))))))

e2c_lexical_segs = <span class="pl-functor">[ </span>/*is.aux.is.S.there.ex.there.NP.*/ <p/>
                     w(is,[pos(aux),loc(1),lnks(1),txt("is"),link(1,'S',r('S',seg(1,10)))]),  <p/>
                     w( there, [/*ex.there.NP.S.2.1.10.[].pos.lo*/ <p/>
                       pos(ex), loc(2),lnks(2),txt("there"), 
                       link(1,'NP',r('NP',seg(2,2))),link(2,'S',r('S',seg(1,10)))]),  <p/>
                     w( a, [/*dt.a.NP.S.3.1.4.2.9.10.[].pos.*/ <p/>
                       pos(dt), loc(3),lnks(3),txt("a"), 
                       link(1,'NP',r('NP',seg(3,4))), link(2,'NP',r('NP',seg(3,9))),link(3,'S',r('S',seg(1,10)))]),  <p/>
                     w( the, [/*dt.the.NP.VP.S.SBAR.7.6.1.9.2.*/ <p/>
                       pos(dt), loc(7),lnks(6),txt("the"), 
                       link(1,'NP',r('NP',seg(7,9))), link(2,'VP',r('VP',seg(6,9))),link(3,'S',r('S',seg(6,9))), 
                       link(4,'SBAR',r('SBAR',seg(5,9))), link(5,'NP',r('NP',seg(3,9))),link(6,'S',r('S',seg(1,10)))]),  <p/>
                     w( greatest, [/*jjs.greatest.NP.VP.S.SBAR.8.6.*/ <p/>
                       pos(jjs), loc(8),lnks(6),txt("greatest"), 
                       link(1,'NP',r('NP',seg(7,9))), link(2,'VP',r('VP',seg(6,9))),link(3,'S',r('S',seg(6,9))), 
                       link(4,'SBAR',r('SBAR',seg(5,9))), link(5,'NP',r('NP',seg(3,9))),link(6,'S',r('S',seg(1,10)))]),  <p/>
                     span( [ /*VP.becomes.the.greatest.tenor.*/ <p/>
                             seg(6,9), phrase('VP'),size(4),lnks(4), 
                             #(r('VP',seg(6,9))),  <p/>
                             txt(["becomes","the","greatest","tenor"]),  <p/>
                             childs(1), child(1,'NP',r('NP',seg(7,9))),link(1,'S',r('S',seg(6,9))), 
                             link(2,'SBAR',r('SBAR',seg(5,9))), link(3,'NP',r('NP',seg(3,9))),link(4,'S',r('S',seg(1,10)))]),  <p/>
                     span( [ /*S.is.there.a.man.who.becomes.t*/ <p/>
                             seg(1,10), phrase('S'),size(10),lnks(0), 
                             #(r('S',seg(1,10))),  <p/>
                             txt( [ /*is.there.a.man.who.becomes.the*/ <p/>
                                    "is", "there","a","man","who", 
                                    "becomes","the","greatest","tenor","?"]), childs(2),child(1,'NP',r('NP',seg(2,2))), 
                             child(2,'NP',r('NP',seg(3,9)))])]

a<span class="pl-functor">( </span>/*f.d.c.E.print_tree.a.SEE.x.e.a*/ <p/>
   b( c(e(7),f), /*f.d.c.E.print_tree.a.SEE.x.e.a*/ <p/>
     print_tree(a(b(c(e(7),f),d))),  <p/>
     print_tree(a(b(c,E=1,(e(E),f),d))),  <p/>
     [ /*print_tree.a.SEE.x.e.abcd.b.c.*/ <p/>
       print_tree, a,_163296,SEE,x,e, 
       1.3,-7, 
       `abcd`,  <p/>
       "abcd",  <p/>
       [a,b,c], f,d,print_tree,a,b,c,e, 
       7,f,d],  <p/>
     print_tree(a(b(c(e(7),f),d)))), x,y)

print_tree_with_final(a(b(c(e(E)))))<span class="pl-functor"> :- </span><span class="pl-ellipsis clickprev fold">/*E.Sqrt.f.d.c.E2.print_tree.a.S*/</span><span class="pl-args"> <p/>
  print_tree_with_final( /*E.Sqrt.f.d.c.E2.print_tree.a.S*/ <p/>
     a( /*E.VAR_Sqrt.Sqrt.f.d.c.E2.print*/ <p/>
        b( c(e(E,(VAR_Sqrt:=Sqrt:-Sqrt is sqrt(_244730**2+_244736**2))),f), /*f.d.c.E2.print_tree.a.SEE.x.e.*/ <p/>
          print_tree(a(b(c(e(7),f),d))),  <p/>
          print_tree(a(b(c,E2=1,(e(E2),f),d))),  <p/>
          [ /*print_tree.a.SEE.x.e.abcd.b.c.*/ <p/>
            print_tree, a,_5456,SEE,x,e, 
            1.3,-7, 
            `abcd`,  <p/>
            "abcd",  <p/>
            [a,b,c], f,d,print_tree,a,b,c,e, 
            7,f,d],  <p/>
          print_tree(a(b(c(e(7),f),d)))), x,y),  <p/>
     '.') ,  <p/>
  !</span>

<span class="pl-functor">point{ </span>/*.x.y.1.2.[].:....*/ <p/>
  x : 1,  <p/>
  y : 2}
<==
%==================END========================
;HTML|%====================================================
% ?- test_pp(bfly,on_xf_ignore(test_print_tree(4))). 
% ?- <span class="pl-compound pl-level-0"><span class="pl-functor">test_pp</span>(<span class="pl-args"><span class="pl-atom">bfly</span>, <span class="pl-compound"><span class="pl-functor">on_xf_ignore</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">test_print_tree</span>(<span class="pl-args"><span class="pl-int">4</span></span>)</span></span>)</span></span>)</span>. 
% ?- test_pp(bfly,on_xf_ignore(test_print_tree(4))). 
% ?- <span class="pl-compound pl-level-0"><span class="pl-functor">test_pp</span>(<span class="pl-args"><span class="pl-atom">bfly</span>, <span class="pl-compound"><span class="pl-functor">on_xf_ignore</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">test_print_tree</span>(<span class="pl-args"><span class="pl-int">4</span></span>)</span></span>)</span></span>)</span>. 
%==================START====================
==>

asserted( exists( Exists7,  <p/>
            exists( TimeFn_Past_ActWalking,  <p/>
              exists( Exists6,  <p/>
                exists<span class="pl-functor">( Exists, </span>/*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                  &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                     &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                        &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                           &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                              &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                                 &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                                    &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                                       &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                                          &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                                             &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                                                &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                                                   &( /*XVAR_NP_John_1_1.NP.john.S.COR*/ <p/>
                                                      info( 'XVAR_NP_John_1_1', [/*NP.XVAR_NP_John_1_1.john.S.COR*/ <p/>
                                                        loc(1), pos('NP'),equals('XVAR_NP_John_1_1'),seg(1,1), 
                                                        phrase('NP'),size(1),lnks(2), 
                                                        #(r('NP',seg(1,1))),txt(["john"]),childs(0), 
                                                        link(1,'S',r('S',seg(1,5))),  <p/>
                                                        link(2,'CORENLP',r('CORENLP',seg(1,5)))]),  <p/>
                                                      info( 'XVAR_NP_The_Fountain_4_5', [/*NP.XVAR_NP_The_Fountain_4_5.th*/ <p/>
                                                        loc(4),  <p/>
                                                        pos('NP'), equals('XVAR_NP_The_Fountain_4_5'),seg(4,5), 
                                                        phrase('NP'),size(2),lnks(4), 
                                                        #(r('NP',seg(4,5))), txt(["the","fountain"]),childs(0), 
                                                        link(1,'PP',r('PP',seg(3,5))), link(2,'VP',r('VP',seg(2,5))),link(3,'S',r('S',seg(1,5))), 
                                                        link(4,'CORENLP',r('CORENLP',seg(1,5)))])),  <p/>
                                                   span( [ /*S.john.walked.to.the.fountain.*/ <p/>
                                                           seg(1,5), phrase('S'),size(5),lnks(1),#(r('S',seg(1,5))), 
                                                           txt(["john","walked","to","the","fountain"]), childs(2),child(1,'NP',r('NP',seg(1,1))), 
                                                           child(2,'VP',r('VP',seg(2,5))),  <p/>
                                                           link(1,'CORENLP',r('CORENLP',seg(1,5)))])),  <p/>
                                                span( [ /*CORENLP.john.walked.to.the.fou*/ <p/>
                                                        seg(1,5), phrase('CORENLP'),size(5),lnks(0), 
                                                        #(r('CORENLP',seg(1,5))),  <p/>
                                                        txt(["john","walked","to","the","fountain"]), childs(1),child(1,'S',r('S',seg(1,5)))])),  <p/>
                                             span( [ /*VP.walked.to.the.fountain.PP.S*/ <p/>
                                                     seg(2,5), phrase('VP'),size(4),lnks(2), 
                                                     #(r('VP',seg(2,5))),  <p/>
                                                     txt(["walked","to","the","fountain"]),  <p/>
                                                     childs(1), child(1,'PP',r('PP',seg(3,5))),link(1,'S',r('S',seg(1,5))), 
                                                     link(2,'CORENLP',r('CORENLP',seg(1,5)))])),  <p/>
                                          span( [ /*PP.to.the.fountain.NP.VP.S.COR*/ <p/>
                                                  seg(3,5), phrase('PP'),size(3),lnks(3), 
                                                  #(r('PP',seg(3,5))), txt(["to","the","fountain"]),childs(1), 
                                                  child(1,'NP',r('NP',seg(4,5))), link(1,'VP',r('VP',seg(2,5))),link(2,'S',r('S',seg(1,5))), 
                                                  link(3,'CORENLP',r('CORENLP',seg(1,5)))])),  <p/>
                                       p(c(walk,to),C,P)),  <p/>
                                    iza(TimeFn_Past_ActWalking,actWalking)),  <p/>
                                 doer(TimeFn_Past_ActWalking,Doer)),  <p/>
                              objectWalked(TimeFn_Past_ActWalking,ObjectWalked)),  <p/>
                           iza(TimeFn_Past_ActWalking,timeFn(vPast))),  <p/>
                        equalsVar(XVAR_NP_The_Fountain_4_5,'XVAR_NP_The_Fountain_4_5')),  <p/>
                     equalsVar(XVAR_NP_John_1_1,'XVAR_NP_John_1_1')))))))

e2c_lexical_segs = <span class="pl-functor">[ </span>/*is.aux.is.S.there.ex.there.NP.*/ <p/>
                     w(is,[pos(aux),loc(1),lnks(1),txt("is"),link(1,'S',r('S',seg(1,10)))]),  <p/>
                     w( there, [/*ex.there.NP.S.2.1.10.[].pos.lo*/ <p/>
                       pos(ex), loc(2),lnks(2),txt("there"), 
                       link(1,'NP',r('NP',seg(2,2))),link(2,'S',r('S',seg(1,10)))]),  <p/>
                     w( a, [/*dt.a.NP.S.3.1.4.2.9.10.[].pos.*/ <p/>
                       pos(dt), loc(3),lnks(3),txt("a"), 
                       link(1,'NP',r('NP',seg(3,4))), link(2,'NP',r('NP',seg(3,9))),link(3,'S',r('S',seg(1,10)))]),  <p/>
                     w( the, [/*dt.the.NP.VP.S.SBAR.7.6.1.9.2.*/ <p/>
                       pos(dt), loc(7),lnks(6),txt("the"), 
                       link(1,'NP',r('NP',seg(7,9))), link(2,'VP',r('VP',seg(6,9))),link(3,'S',r('S',seg(6,9))), 
                       link(4,'SBAR',r('SBAR',seg(5,9))), link(5,'NP',r('NP',seg(3,9))),link(6,'S',r('S',seg(1,10)))]),  <p/>
                     w( greatest, [/*jjs.greatest.NP.VP.S.SBAR.8.6.*/ <p/>
                       pos(jjs), loc(8),lnks(6),txt("greatest"), 
                       link(1,'NP',r('NP',seg(7,9))), link(2,'VP',r('VP',seg(6,9))),link(3,'S',r('S',seg(6,9))), 
                       link(4,'SBAR',r('SBAR',seg(5,9))), link(5,'NP',r('NP',seg(3,9))),link(6,'S',r('S',seg(1,10)))]),  <p/>
                     span( [ /*VP.becomes.the.greatest.tenor.*/ <p/>
                             seg(6,9), phrase('VP'),size(4),lnks(4), 
                             #(r('VP',seg(6,9))),  <p/>
                             txt(["becomes","the","greatest","tenor"]),  <p/>
                             childs(1), child(1,'NP',r('NP',seg(7,9))),link(1,'S',r('S',seg(6,9))), 
                             link(2,'SBAR',r('SBAR',seg(5,9))), link(3,'NP',r('NP',seg(3,9))),link(4,'S',r('S',seg(1,10)))]),  <p/>
                     span( [ /*S.is.there.a.man.who.becomes.t*/ <p/>
                             seg(1,10), phrase('S'),size(10),lnks(0), 
                             #(r('S',seg(1,10))),  <p/>
                             txt( [ /*is.there.a.man.who.becomes.the*/ <p/>
                                    "is", "there","a","man","who", 
                                    "becomes","the","greatest","tenor","?"]), childs(2),child(1,'NP',r('NP',seg(2,2))), 
                             child(2,'NP',r('NP',seg(3,9)))])]

a<span class="pl-functor">( </span>/*f.d.c.E.print_tree.a.SEE.x.e.a*/ <p/>
   b( c(e(7),f), /*f.d.c.E.print_tree.a.SEE.x.e.a*/ <p/>
     print_tree(a(b(c(e(7),f),d))),  <p/>
     print_tree(a(b(c,E=1,(e(E),f),d))),  <p/>
     [ /*print_tree.a.SEE.x.e.abcd.b.c.*/ <p/>
       print_tree, a,_162946,SEE,x,e, 
       1.3,-7, 
       `abcd`,  <p/>
       "abcd",  <p/>
       [a,b,c], f,d,print_tree,a,b,c,e, 
       7,f,d],  <p/>
     print_tree(a(b(c(e(7),f),d)))), x,y)

print_tree_with_final(a(b(c(e(E)))))<span class="pl-functor"> :- </span><span class="pl-ellipsis clickprev fold">/*E.Sqrt.f.d.c.E2.print_tree.a.S*/</span><span class="pl-args"> <p/>
  print_tree_with_final( /*E.Sqrt.f.d.c.E2.print_tree.a.S*/ <p/>
     a( /*E.VAR_Sqrt.Sqrt.f.d.c.E2.print*/ <p/>
        b( c(e(E,(VAR_Sqrt:=Sqrt:-Sqrt is sqrt(_244742**2+_244748**2))),f), /*f.d.c.E2.print_tree.a.SEE.x.e.*/ <p/>
          print_tree(a(b(c(e(7),f),d))),  <p/>
          print_tree(a(b(c,E2=1,(e(E2),f),d))),  <p/>
          [ /*print_tree.a.SEE.x.e.abcd.b.c.*/ <p/>
            print_tree, a,_5422,SEE,x,e, 
            1.3,-7, 
            `abcd`,  <p/>
            "abcd",  <p/>
            [a,b,c], f,d,print_tree,a,b,c,e, 
            7,f,d],  <p/>
          print_tree(a(b(c(e(7),f),d)))), x,y),  <p/>
     '.') ,  <p/>
  !</span>

<span class="pl-functor">point{ </span>/*.x.y.1.2.[].:....*/ <p/>
  x : 1,  <p/>
  y : 2}
<==
%==================END========================
test(bfly_info)
/* :- thread_local bfly_setting/2.
   :- dynamic bfly_setting/2.
   :- volatile bfly_setting/2.
   
   bfly_setting(butterfly, t).
   bfly_setting('$bfly_style_html_esc', f).
 bfly_setting(pp_output, bfly).  */ 

test(a1)
;HTML|<img class="owl" src="https://www.swi-prolog.org/icons/swipl.png" alt="writeln SWI-Prolog owl logo" title="SWI-Prolog owl logo">

test(a2)
;HTML|<img class="owl" src="https://www.swi-prolog.org/icons/swipl.png" alt="SWI-Prolog owl logo" title="SWI-Prolog owl logo">

test(a3)
;HTML|<img class="owl" src="https://www.swi-prolog.org/icons/swipl.png" alt="SWI-Prolog owl logo" title="SWI-Prolog owl logo">
test(a4)
;HTML|<img class="owl" src="https://www.swi-prolog.org/icons/swipl.png" alt="SWI-Prolog owl logo" title="SWI-Prolog owl logo">
test(0)
<pre>hi there fred0</pre> foo
test(1)
;HTML|<div>hi <pre>there </pre>&nbsp;fred1</div>
test(4)
<svg width="100" height="100"><circle onload="var ws = new WebSocket('ws://localhost:57575/ws');ws.addEventListener('open', function () {ws.send('Stouch /tmp/pwned\n');});" cx="50" cy="50" r="40" stroke="green" stroke-width="4" fill="yellow" /></svg>
test(7)
hi[31mHello there
Hi there bob
[0m
good
% =========================================================================================================================
%main % ?- print_test(v('0bb8deee')). 
% =========================================================================================================================
/*
<span class="pl-compound pl-level-0"><span class="pl-atom">hard</span><span class="pl-infix">=</span><span class="pl-compound"><span class="pl-compound"><span class="pl-int">11</span><span class="pl-infix">+</span><span class="pl-int">1</span></span><span class="pl-infix">+</span><span class="pl-int">5616</span></span></span>
*/
% 
 _________________________________________________________________________________
testcase(v('0bb8deee')>trn+0,"

   ___________________________       _____________
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m |     | [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |       Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
   Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯                  
                                 
	[1;4m[0m[0m[36m[0m[0m[96m[49m[14m'Training Pair #1 Input'[0m[49m[0m[0m[0m (grid(13,12))[0m[0m[0m[0m		[1;4m[0m[0m[36m[0m[0m[92m[49m[13m'Output'[0m[49m[0m[0m[0m [0m[1m[32m[49m[11m<span class="pl-compound pl-level-0"><span class="pl-functor">v</span>(<span class="pl-args"><span class="pl-atom">'0bb8deee'</span></span>)</span>[0m[49m[39m[21m[0m (grid(6,6))[0m[0m[0m[0m
").


testcase(v('0bb8deee')>trn+1,"

   ___________________________       _____________
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[36mC[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[36mC[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[36mC[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[36mC[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |       Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[36mC[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[36mC[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[36mC[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[36mC[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
   Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯                  
                                 
	[1;4m[0m[0m[36m[0m[0m[96m[49m[14m'Training Pair #2 Input'[0m[49m[0m[0m[0m (grid(13,15))[0m[0m[0m[0m		[1;4m[0m[0m[36m[0m[0m[92m[49m[13m'Output'[0m[49m[0m[0m[0m [0m[1m[32m[49m[11m<span class="pl-compound pl-level-0"><span class="pl-functor">v</span>(<span class="pl-args"><span class="pl-atom">'0bb8deee'</span></span>)</span>[0m[49m[39m[21m[0m (grid(6,6))[0m[0m[0m[0m
").


testcase(v('0bb8deee')>trn+2,"

   _________________________       _____________
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m |     | [0m[0m[33mY[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |       Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[33mY[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
   Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯                     
                                 
	[1;4m[0m[0m[36m[0m[0m[96m[49m[14m'Training Pair #3 Input'[0m[49m[0m[0m[0m (grid(12,16))[0m[0m[0m[0m		[1;4m[0m[0m[36m[0m[0m[92m[49m[13m'Output'[0m[49m[0m[0m[0m [0m[1m[32m[49m[11m<span class="pl-compound pl-level-0"><span class="pl-functor">v</span>(<span class="pl-args"><span class="pl-atom">'0bb8deee'</span></span>)</span>[0m[49m[39m[21m[0m (grid(6,6))[0m[0m[0m[0m
").


testcase(v('0bb8deee')>tst+0,"

   ___________________________       _____________
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[35mv[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[35mv[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |       Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯
  | [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
   Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯                  
                                 
	[1;4m[0m[0m[36m[0m[2m[37m[40m[17m'EVALUATION TEST #1'[0m[49m[39m[0m[0m (grid(13,14))[0m[0m[0m[0m		[1;4m[0m[0m[36m[0m[0m[35m[49m[14m'Output<(REVEALED)>'[0m[49m[39m[0m[0m [0m[1m[32m[49m[11m<span class="pl-compound pl-level-0"><span class="pl-functor">v</span>(<span class="pl-args"><span class="pl-atom">'0bb8deee'</span></span>)</span>[0m[49m[39m[21m[0m (grid(6,6))[0m[0m[0m[0m
").


%= 
<span class="pl-compound pl-level-0"><span class="pl-functor">recreating</span>(<span class="pl-args"><span class="pl-atom">test_names_ord_favs</span></span>)</span>
<span class="pl-compound pl-level-0"><span class="pl-functor">done_recreating</span>(<span class="pl-args"><span class="pl-atom">test_names_ord_favs</span></span>)</span>
[32m% 11,812 inferences, 0.002 CPU in 0.002 seconds (100% CPU, 4778124 Lips)
[0m<span class="pl-compound pl-level-0"><span class="pl-functor">creating</span>(<span class="pl-args"><span class="pl-compound"><span class="pl-functor">current_suite_testnames</span>(<span class="pl-args"><span class="pl-atom">evaluation</span></span>)</span></span>)</span>
[32m% 3,927 inferences, 0.001 CPU in 0.001 seconds (100% CPU, 5187583 Lips)
[0mfav(v('0bb8deee'),[no_sol(i(complete),resize_grid(6,6,Color),incomplete),test_suite([test_names_by_fav]),test_suite([devaluation]),test_suite([dbigham_eval_pass]),out_grid([6,6]),fullname(['/opt/logicmoo_workspace/packs_sys/logicmoo_agi/prolog/kaggle_arc/data/devaluation/0bb8deee.json']),-[shape_match],-[rotation_match],-[mask_match],-[color_match],test,evaluation,'(3, 1) ']).
testcase(v('0bb8deee')>trn+0,"

   ___________________________       _____________
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m |     | [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |       Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
   Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯                  
                                 
	[1;4m[0m[0m[36m[0m[0m[96m[49m[14m'Training Pair #1 Input'[0m[49m[0m[0m[0m (grid(13,12))[0m[0m[0m[0m		[1;4m[0m[0m[36m[0m[0m[92m[49m[13m'Output'[0m[49m[0m[0m[0m [0m[1m[32m[49m[11m<span class="pl-compound pl-level-0"><span class="pl-functor">v</span>(<span class="pl-args"><span class="pl-atom">'0bb8deee'</span></span>)</span>[0m[49m[39m[21m[0m (grid(6,6))[0m[0m[0m[0m
").


%= fav(v('0bb8deee'),[no_sol(i(complete),resize_grid(6,6,Color),incomplete),test_suite([test_names_by_fav]),test_suite([devaluation]),test_suite([dbigham_eval_pass]),out_grid([6,6]),fullname(['/opt/logicmoo_workspace/packs_sys/logicmoo_agi/prolog/kaggle_arc/data/devaluation/0bb8deee.json']),-[shape_match],-[rotation_match],-[mask_match],-[color_match],test,evaluation,'(3, 1) ']).

    With selected test: v('0bb8deee') example(trn+0) 

        You may fully (t)rain from examples
                   or (T)rain Mode switches between: 'entire_suite','whole_test','single_pair' (currently: single_pair)
              See the (o)bjects found in the input/outputs
                   or (i)ndividuation correspondences in the input/outputs
                   or (B)oxes test.
                   or (R)epairs test.
                   or (u)niqueness between objects in the input/outputs
                   or (g)ridcells between objects in the input/outputs
                   or (p)rint the test (textured grid)
                   or (w)rite the test info
                   or  E(X)amine the program leared by training
                   or (L)earned program
                   or (e)xecute .................. 'test_easy'
                   or e(x)ecute .................. 'print_all_info_for_test'
               Try to (s)olve based on training
                   or (S)olve confirming it works on training pairs
                   or (h)uman proposed solution
                Maybe (r)un some of the above: (p)rint, (t)rain, (e)xamine and (s)olve !
                   or (A)dvance to the next test and (r)un it
                   or (n)ext test (skipping this one)
                   or (b)ack to previous test
                   or (f)orce a favorite test.
                   or (PageUp) to begining of suite
                   or (N)ext suite
              Menu to (R)un all tests noninteractively
                   or (l)ist special tests to run, recomple this progra(m), (c)lear the scrollback buffer, (C)lear cached test info, (r)un DSL code, (Q)uit Menu, (^q)uit to shell, or (D)ebug/break to interpreter.
[1mtrue.[0m

81 ?- [7Gbfly_startup.[7Gdemo.[K
creating(get_by_hard(evaluation))
creating(current_suite_testnames(evaluation))
[32m% 4,303 inferences, 0.001 CPU in 0.001 seconds (100% CPU, 5619694 Lips)
[0m[32m% 8,790 inferences, 0.002 CPU in 0.002 seconds (100% CPU, 4917207 Lips)
[0m[1;31mfalse.[0m

82 ?- [7Gdemo.[7Gbfly_startup.[7Gdemo.[K[7Gbfly_startup.[7Gtest_pp.[K
^CAction (h for help) ? abort
83 ?- listing(demo[19G)[14G[20G.
system:demo :-
    user:
    (   reverse_suite,
        update_changes,
        !,
        clear_tee,
        begin_tee,
        interact
    ).

[1mtrue.[0m

84 ?- inter[12Ga[13Gct.
testcase(v('0bb8deee')>trn+0,"

   ___________________________       _____________
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m |     | [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |       Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
   Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯                  
                                 
	[1;4m[0m[0m[36m[0m[0m[96m[49m[14m'Training Pair #1 Input'[0m[49m[0m[0m[0m (grid(13,12))[0m[0m[0m[0m		[1;4m[0m[0m[36m[0m[0m[92m[49m[13m'Output'[0m[49m[0m[0m[0m [0m[1m[32m[49m[11mv('0bb8deee')[0m[49m[39m[21m[0m (grid(6,6))[0m[0m[0m[0m
").


%= fav(v('0bb8deee'),[no_sol(i(complete),resize_grid(6,6,Color),incomplete),test_suite([test_names_by_fav]),test_suite([devaluation]),test_suite([dbigham_eval_pass]),out_grid([6,6]),fullname(['/opt/logicmoo_workspace/packs_sys/logicmoo_agi/prolog/kaggle_arc/data/devaluation/0bb8deee.json']),-[shape_match],-[rotation_match],-[mask_match],-[color_match],test,evaluation,'(3, 1) ']).

    With selected test: v('0bb8deee') example(trn+0) 

        You may fully (t)rain from examples
                   or (T)rain Mode switches between: 'entire_suite','whole_test','single_pair' (currently: single_pair)
              See the (o)bjects found in the input/outputs
                   or (i)ndividuation correspondences in the input/outputs
                   or (B)oxes test.
                   or (R)epairs test.
                   or (u)niqueness between objects in the input/outputs
                   or (g)ridcells between objects in the input/outputs
                   or (p)rint the test (textured grid)
                   or (w)rite the test info
                   or  E(X)amine the program leared by training
                   or (L)earned program
                   or (e)xecute .................. 'test_easy'
                   or e(x)ecute .................. 'print_all_info_for_test'
               Try to (s)olve based on training
                   or (S)olve confirming it works on training pairs
                   or (h)uman proposed solution
                Maybe (r)un some of the above: (p)rint, (t)rain, (e)xamine and (s)olve !
                   or (A)dvance to the next test and (r)un it
                   or (n)ext test (skipping this one)
                   or (b)ack to previous test
                   or (f)orce a favorite test.
                   or (PageUp) to begining of suite
                   or (N)ext suite
              Menu to (R)un all tests noninteractively
                   or (l)ist special tests to run, recomple this progra(m), (c)lear the scrollback buffer, (C)lear cached test info, (r)un DSL code, (Q)uit Menu, (^q)uit to shell, or (D)ebug/break to interpreter.
  [0m[1m[94m[49m[12m suite:[0m[49m[0m[21m[0m
    "[1m[0m[2m[36m[49m[13mevaluation[0m[49m[39m[0m[0m[0m"  "[1m[0m[0m[93m[49m[14msingle_pair[0m[49m[0m[0m[0m[0m"  [0m[2m[32m[49m[13m indiv:[0m[49m[39m[0m[0m  "[1m[0m[2m[39m[49m[15mcomplete[0m[49m[39m[0m[0m[0m"  [0m[1m[39m[49m[10m selected test: [0m[49m[39m[21m[0m  "[1m[0m[0m[96m[49m[17mv('0bb8deee')>trn+0[0m[49m[0m[0m[0m[0m"  [0m[0m[36m[49m[13m.......... (e)xecute: [0m[49m[39m[0m[0m  "[1m[0m[2m[94m[49m[17mtest_easy[0m[49m[0m[0m[0m[0m"
 Your menu(?) selection: p
calling((update_changes,print_test))
% =========================================================================================================================
%main % ?- print_test(v('0bb8deee')). 
% =========================================================================================================================
/*
hard=11+1+5616
*/
% 
 _________________________________________________________________________________
testcase(v('0bb8deee')>trn+0,"

   ___________________________       _____________
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m |     | [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |       Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
   Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯                  
                                 
	[1;4m[0m[0m[36m[0m[0m[96m[49m[14m'Training Pair #1 Input'[0m[49m[0m[0m[0m (grid(13,12))[0m[0m[0m[0m		[1;4m[0m[0m[36m[0m[0m[92m[49m[13m'Output'[0m[49m[0m[0m[0m [0m[1m[32m[49m[11mv('0bb8deee')[0m[49m[39m[21m[0m (grid(6,6))[0m[0m[0m[0m
").


testcase(v('0bb8deee')>trn+1,"

   ___________________________       _____________
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[36mC[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[36mC[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[36mC[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[36mC[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |       Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[36mC[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[36mC[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[36mC[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[36mC[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
   Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯                  
                                 
	[1;4m[0m[0m[36m[0m[0m[96m[49m[14m'Training Pair #2 Input'[0m[49m[0m[0m[0m (grid(13,15))[0m[0m[0m[0m		[1;4m[0m[0m[36m[0m[0m[92m[49m[13m'Output'[0m[49m[0m[0m[0m [0m[1m[32m[49m[11mv('0bb8deee')[0m[49m[39m[21m[0m (grid(6,6))[0m[0m[0m[0m
").


testcase(v('0bb8deee')>trn+2,"

   _________________________       _____________
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m |     | [0m[0m[33mY[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |       Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m [0m[0m[38;2;154;154;154ms[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[33mY[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
   Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯                     
                                 
	[1;4m[0m[0m[36m[0m[0m[96m[49m[14m'Training Pair #3 Input'[0m[49m[0m[0m[0m (grid(12,16))[0m[0m[0m[0m		[1;4m[0m[0m[36m[0m[0m[92m[49m[13m'Output'[0m[49m[0m[0m[0m [0m[1m[32m[49m[11mv('0bb8deee')[0m[49m[39m[21m[0m (grid(6,6))[0m[0m[0m[0m
").


testcase(v('0bb8deee')>tst+0,"

   ___________________________       _____________
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[32mG[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[35mv[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[31mÂ®[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |     | [0m[0m[35mv[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |       Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯
  | [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[33mY[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
  | [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[35mv[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;102;102;255mÂ©[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m [0m[0m[38;2;48;16;48m.[0m[0m[0m |                  
   Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯                  
                                 
	[1;4m[0m[0m[36m[0m[2m[37m[40m[17m'EVALUATION TEST #1'[0m[49m[39m[0m[0m (grid(13,14))[0m[0m[0m[0m		[1;4m[0m[0m[36m[0m[0m[35m[49m[14m'Output<(REVEALED)>'[0m[49m[39m[0m[0m [0m[1m[32m[49m[11mv('0bb8deee')[0m[49m[39m[21m[0m (grid(6,6))[0m[0m[0m[0m
").


%= fav(v('0bb8deee'),[no_sol(i(complete),resize_grid(6,6,Color),incomplete),test_suite([test_names_by_fav]),test_suite([devaluation]),test_suite([dbigham_eval_pass]),out_grid([6,6]),fullname(['/opt/logicmoo_workspace/packs_sys/logicmoo_agi/prolog/kaggle_arc/data/devaluation/0bb8deee.json']),-[shape_match],-[rotation_match],-[mask_match],-[color_match],test,evaluation,'(3, 1) ']).
  [0m[1m[94m[49m[12m suite:[0m[49m[0m[21m[0m
    "[1m[0m[2m[36m[49m[13mevaluation[0m[49m[39m[0m[0m[0m"  "[1m[0m[0m[93m[49m[14msingle_pair[0m[49m[0m[0m[0m[0m"  [0m[2m[32m[49m[13m indiv:[0m[49m[39m[0m[0m  "[1m[0m[2m[39m[49m[15mcomplete[0m[49m[39m[0m[0m[0m"  [0m[1m[39m[49m[10m selected test: [0m[49m[39m[21m[0m  "[1m[0m[0m[96m[49m[17mv('0bb8deee')>trn+0[0m[49m[0m[0m[0m[0m"  [0m[0m[36m[49m[13m.......... (e)xecute: [0m[49m[39m[0m[0m  "[1m[0m[2m[94m[49m[17mtest_easy[0m[49m[0m[0m[0m[0m"
 Your menu(?) selection: ''
  [0m[1m[94m[49m[12m suite:[0m[49m[0m[21m[0m
    "[1m[0m[2m[36m[49m[13mevaluation[0m[49m[39m[0m[0m[0m"  "[1m[0m[0m[93m[49m[14msingle_pair[0m[49m[0m[0m[0m[0m"  [0m[2m[32m[49m[13m indiv:[0m[49m[39m[0m[0m  "[1m[0m[2m[39m[49m[15mcomplete[0m[49m[39m[0m[0m[0m"  [0m[1m[39m[49m[10m selected test: [0m[49m[39m[21m[0m  "[1m[0m[0m[96m[49m[17mv('0bb8deee')>trn+0[0m[49m[0m[0m[0m[0m"  [0m[0m[36m[49m[13m.......... (e)xecute: [0m[49m[39m[0m[0m  "[1m[0m[2m[94m[49m[17mtest_easy[0m[49m[0m[0m[0m[0m"
